name: Build and Release Go Project

on:
  push:
    branches:
      - main  # Change to "master" if your default branch is master
    tags:
      - 'v*'  # Runs when a new tag (e.g., v1.0.0) is pushed
  pull_request:
    branches:
      - main  # Change to "master" if needed

jobs:
  build:
    name: Compile Go Binaries
    runs-on: ubuntu-latest

    strategy:
      matrix:
        os: [linux, windows, darwin]  # Linux, Windows, macOS
        arch: [amd64]                 # x86_64 architecture

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'
          cache-dependency-path: go.sum  # Ensure caching uses go.sum

      - name: Cache Go Modules
        uses: actions/cache@v3
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install Dependencies
        run: |
          go mod tidy
          go mod download

      - name: Build Binary
        run: |
          mkdir -p build
          BIN_NAME="myprogram-${{ matrix.os }}-${{ matrix.arch }}"
          [ "${{ matrix.os }}" == "windows" ] && BIN_NAME+=".exe"
          GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} CGO_ENABLED=0 go build -o build/$BIN_NAME main.go

      - name: Run Tests
        run: go test -v ./...

      - name: Upload Artifact to GitHub Actions
        uses: actions/upload-artifact@v4
        with:
          name: myprogram-${{ matrix.os }}-${{ matrix.arch }}
          path: build/*

  release:
    name: Publish Release
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: build/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: build/**/*
          tag_name: ${{ github.ref_name }}
          name: "Release ${{ github.ref_name }}"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
